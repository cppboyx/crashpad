name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "backtrace" branch
  push:
    branches: ["backtrace"]
  pull_request:
    branches: ["backtrace"]
  schedule:
    - cron: "0 0 * * *"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  build-windows:
    # Because we want to use Visual Studio 16 2019, we need to use the windows-2019 GitHub runner
    runs-on: windows-2019

    strategy:
      fail-fast: false
      matrix:
        generator: ["Visual Studio 16 2019", Ninja]

    steps:
      # Install latest CMake.
      - uses: lukka/get-cmake@latest

      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Add cl.exe to PATH
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64

      - name: CMake
        run: |
          # make a build directory (note: build is already used by Crashpad)
          mkdir cbuild

          # run CMake (additional options like -DCMAKE_EXPORT_COMPILE_COMMANDS=TRUE are possible)
          # it is recommended to specify the compiler version used for the build
          cmake -S . -B cbuild/ -DCRASHPAD_BUILD_EXAMPLES=TRUE -G "${{ matrix.generator }}" -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_COMPILER=cl.exe -DCMAKE_C_COMPILER=cl.exe
          cmake --build cbuild/

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.1"
          working-directory: ./backtrace/test
          bundler-cache: true

      - name: Run tests
        working-directory: ./backtrace/test
        run: |
          bundle exec ruby ./test.rb -v

      - name: Crashpad distribution ZIP
        run: |
          ruby backtrace/save_artifacts.rb --output Crashpad_Windows_build.zip

      - uses: actions/upload-artifact@v3
        with:
          name: Crashpad_Windows_build_${{ github.sha }}
          path: Crashpad_Windows_build.zip
